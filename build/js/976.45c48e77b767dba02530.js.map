{"version":3,"file":"js/976.45c48e77b767dba02530.js","mappings":"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","sources":["webpack://frontend/./node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","webpack://frontend/./src/modules/common/pages/Buy.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"determinate\"`. */\n    circleDeterminate: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n    '@keyframes circular-rotate': {\n      '0%': {\n        // Fix IE 11 wobbly\n        transformOrigin: '50% 50%'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'determinate': classes.circleDeterminate,\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['determinate', 'indeterminate', 'static']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'static') {\n      throw new Error('Material-UI: `variant=\"static\"` was deprecated. Use `variant=\"determinate\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import { CircularProgress } from \"@material-ui/core\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  buyWalletApi,\r\n  getWalletApi,\r\n  sellWalletApi,\r\n  getUPILink,\r\n} from \"../../../apis/wallet\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { BsArrowLeftShort } from \"react-icons/bs\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CDN_URL } from \"../../../config\";\r\nimport { connectSocket } from \"../../../socket\";\r\nimport { userBuyChipsRequest } from \"../../../redux/actions/wallet\";\r\n\r\nexport default function Buy() {\r\n  const dispatch = useDispatch();\r\n\r\n  const socket3 = useSelector((state) => state.wallet);\r\n  const { isLoading } = useSelector((state) => state.wallet);\r\n  console.log(\"socket2buy\", socket3.data);\r\n\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n  const pay = () => {\r\n    if (amount <= 0) {\r\n      toast.error(\"amount should be greater than 0\");\r\n    } else if (amount > 20000) {\r\n      toast.error(\"Maximum amount limit is 20000\");\r\n    } else {\r\n      dispatch(\r\n        userBuyChipsRequest({ amount: Number(amount), createdAt: new Date() })\r\n      );\r\n\r\n      setAmount(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 mx-auto p-3 g-0\">\r\n        <div className=\"mb-3 d-flex align-items-center justify-content-between\">\r\n          <div className=\"d-flex align-items-center justify-content-start\">\r\n            <Link to=\"/wallet\">\r\n              <button className=\"btn btn-primary border\">\r\n                <BsArrowLeftShort />\r\n                Back\r\n              </button>\r\n            </Link>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-primary d-flex align-items-center justify-content-center\"\r\n          >\r\n            <img\r\n              style={{ marginRight: \"4px\" }}\r\n              src={`${CDN_URL}svgs/info.svg`}\r\n              alt=\"info\"\r\n            />\r\n            <p className=\"m-0 p-0\">Guide</p>\r\n          </button>\r\n        </div>\r\n        <div className=\"mb-3 shadow card\">\r\n          <div className=\"bg-light text-dark text-capitalize card-header\">\r\n            Buy Chips\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <label for=\"amount\" className=\"form-label w-100 text-start\">\r\n              Enter Amount\r\n            </label>\r\n            <div className=\"input-group mb-4\">\r\n              <span className=\"input-group-text bg-light text-dark\">₹</span>\r\n              <input\r\n                onChange={(e) => setAmount(e.target.value)}\r\n                value={amount}\r\n                className=\"form-control\"\r\n                type=\"number\"\r\n                placeholder=\"Amount\"\r\n              ></input>\r\n            </div>\r\n            <div className=\"d-grid\">\r\n              <button className=\"btn btn-primary\" onClick={pay}>\r\n                {isLoading ? (\r\n                  <CircularProgress\r\n                    style={{\r\n                      width: \"1.5rem\",\r\n                      height: \"1.5rem\",\r\n                      verticalAlign: \"middle\",\r\n                    }}\r\n                    color=\"white\"\r\n                  />\r\n                ) : (\r\n                  \"Pay\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p className=\"text-capitalize text-secondary\">payments secured by</p>\r\n          <div className=\"d-flex justify-content-center align-items-center\">\r\n            <div className=\"hstack gap-2 minBreakpoint-xs\">\r\n              <img\r\n                src=\"https://ludo-players.s3.ap-south-1.amazonaws.com/cdn/lp/icons/logos/gpay.svg\"\r\n                alt=\"gpay logo\"\r\n                width={\"48\"}\r\n              ></img>\r\n              <img\r\n                src=\"https://ludo-players.s3.ap-south-1.amazonaws.com/cdn/lp/icons/logos/paytm.svg\"\r\n                alt=\"paytm logo\"\r\n                width={\"48\"}\r\n              ></img>\r\n              <img\r\n                src=\"https://ludo-players.s3.ap-south-1.amazonaws.com/cdn/lp/icons/logos/phonepe.svg\"\r\n                alt=\"phone logo\"\r\n                width={\"48\"}\r\n              ></img>\r\n              <img\r\n                src=\"https://ludo-players.s3.ap-south-1.amazonaws.com/cdn/lp/icons/logos/upi.svg\"\r\n                alt=\"upi logo\"\r\n                width={\"48\"}\r\n              ></img>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["SIZE","CircularProgress","props","ref","classes","className","_props$color","color","_props$disableShrink","disableShrink","_props$size","size","style","_props$thickness","thickness","_props$value","value","_props$variant","variant","other","circleStyle","rootStyle","rootProps","circumference","Math","PI","strokeDasharray","toFixed","round","strokeDashoffset","concat","transform","root","determinate","indeterminate","static","width","height","role","svg","viewBox","circle","circleDisableShrink","circleDeterminate","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","theme","display","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","transformOrigin","name","flip","Buy","dispatch","useDispatch","socket3","useSelector","state","wallet","isLoading","console","log","data","_useState2","useState","amount","setAmount","React","Link","to","BsArrowLeftShort","type","marginRight","src","CDN_URL","alt","for","onChange","e","target","placeholder","onClick","toast","error","userBuyChipsRequest","Number","createdAt","Date","verticalAlign"],"sourceRoot":""}