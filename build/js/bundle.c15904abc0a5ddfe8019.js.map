{"version":3,"file":"js/bundle.c15904abc0a5ddfe8019.js","mappings":"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","sources":["webpack://frontend/./node_modules/@material-ui/core/esm/Slide/Slide.js","webpack://frontend/./node_modules/@material-ui/core/esm/utils/debounce.js","webpack://frontend/./node_modules/@material-ui/core/esm/Drawer/Drawer.js","webpack://frontend/./node_modules/@material-ui/core/esm/NoSsr/NoSsr.js","webpack://frontend/./node_modules/@material-ui/core/esm/SwipeableDrawer/SwipeArea.js","webpack://frontend/./node_modules/@material-ui/core/esm/SwipeableDrawer/SwipeableDrawer.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport debounce from '../utils/debounce';\nimport { Transition } from 'react-transition-group';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport useForkRef from '../utils/useForkRef';\nimport useTheme from '../styles/useTheme';\nimport { duration } from '../styles/transitions';\nimport { reflow, getTransitionProps } from '../transitions/utils'; // Translate the node so he can't be seen on the screen.\n// Later, we gonna translate back the node to his original location\n// with `none`.`\n\nfunction getTranslateValue(direction, node) {\n  var rect = node.getBoundingClientRect();\n  var transform;\n\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    var computedStyle = window.getComputedStyle(node);\n    transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n  }\n\n  var offsetX = 0;\n  var offsetY = 0;\n\n  if (transform && transform !== 'none' && typeof transform === 'string') {\n    var transformValues = transform.split('(')[1].split(')')[0].split(',');\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n\n  if (direction === 'left') {\n    return \"translateX(\".concat(window.innerWidth, \"px) translateX(\").concat(offsetX - rect.left, \"px)\");\n  }\n\n  if (direction === 'right') {\n    return \"translateX(-\".concat(rect.left + rect.width - offsetX, \"px)\");\n  }\n\n  if (direction === 'up') {\n    return \"translateY(\".concat(window.innerHeight, \"px) translateY(\").concat(offsetY - rect.top, \"px)\");\n  } // direction === 'down'\n\n\n  return \"translateY(-\".concat(rect.top + rect.height - offsetY, \"px)\");\n}\n\nexport function setTranslateValue(direction, node) {\n  var transform = getTranslateValue(direction, node);\n\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\nvar defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The Slide transition is used by the [Drawer](/components/drawers/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Slide = /*#__PURE__*/React.forwardRef(function Slide(props, ref) {\n  var children = props.children,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'down' : _props$direction,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? defaultTimeout : _props$timeout,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Transition : _props$TransitionComp,\n      other = _objectWithoutProperties(props, [\"children\", \"direction\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  var theme = useTheme();\n  var childrenRef = React.useRef(null);\n  /**\n   * used in cloneElement(children, { ref: handleRef })\n   */\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    childrenRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRefIntermediary = useForkRef(children.ref, handleOwnRef);\n  var handleRef = useForkRef(handleRefIntermediary, ref);\n\n  var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {\n    return function (isAppearing) {\n      if (callback) {\n        // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n        if (isAppearing === undefined) {\n          callback(childrenRef.current);\n        } else {\n          callback(childrenRef.current, isAppearing);\n        }\n      }\n    };\n  };\n\n  var handleEnter = normalizedTransitionCallback(function (node, isAppearing) {\n    setTranslateValue(direction, node);\n    reflow(node);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  var handleEntering = normalizedTransitionCallback(function (node, isAppearing) {\n    var transitionProps = getTransitionProps({\n      timeout: timeout,\n      style: style\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.webkitTransform = 'none';\n    node.style.transform = 'none';\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  var handleEntered = normalizedTransitionCallback(onEntered);\n  var handleExiting = normalizedTransitionCallback(onExiting);\n  var handleExit = normalizedTransitionCallback(function (node) {\n    var transitionProps = getTransitionProps({\n      timeout: timeout,\n      style: style\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.sharp\n    }));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.sharp\n    }));\n    setTranslateValue(direction, node);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  var handleExited = normalizedTransitionCallback(function (node) {\n    // No need for transitions when the component is hidden\n    node.style.webkitTransition = '';\n    node.style.transition = '';\n\n    if (onExited) {\n      onExited(node);\n    }\n  });\n  var updatePosition = React.useCallback(function () {\n    if (childrenRef.current) {\n      setTranslateValue(direction, childrenRef.current);\n    }\n  }, [direction]);\n  React.useEffect(function () {\n    // Skip configuration where the position is screen size invariant.\n    if (inProp || direction === 'down' || direction === 'right') {\n      return undefined;\n    }\n\n    var handleResize = debounce(function () {\n      if (childrenRef.current) {\n        setTranslateValue(direction, childrenRef.current);\n      }\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [direction, inProp]);\n  React.useEffect(function () {\n    if (!inProp) {\n      // We need to update the position of the drawer when the direction change and\n      // when it's hidden.\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    nodeRef: childrenRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    appear: true,\n    in: inProp,\n    timeout: timeout\n  }, other), function (state, childProps) {\n    return /*#__PURE__*/React.cloneElement(children, _extends({\n      ref: handleRef,\n      style: _extends({\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, style, children.props.style)\n    }, childProps));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Slide.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n\n  /**\n   * Direction the child node will enter from.\n   */\n  direction: PropTypes.oneOf(['down', 'left', 'right', 'up']),\n\n  /**\n   * If `true`, show the component; triggers the enter or exit animation.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Slide;","// Corresponds to 10 frames at 60 Hz.\n// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\nexport default function debounce(func) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 166;\n  var timeout;\n\n  function debounced() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // eslint-disable-next-line consistent-this\n    var that = this;\n\n    var later = function later() {\n      func.apply(that, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  }\n\n  debounced.clear = function () {\n    clearTimeout(timeout);\n  };\n\n  return debounced;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport withStyles from '../styles/withStyles';\nimport Slide from '../Slide';\nimport Paper from '../Paper';\nimport capitalize from '../utils/capitalize';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `variant=\"permanent or persistent\"`. */\n    docked: {\n      flex: '0 0 auto'\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: {\n      overflowY: 'auto',\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n      flex: '1 0 auto',\n      zIndex: theme.zIndex.drawer,\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      // temporary style\n      position: 'fixed',\n      top: 0,\n      // We disable the focus ring for mouse, touch and keyboard users.\n      // At some point, it would be better to keep it for keyboard users.\n      // :focus-ring CSS pseudo-class will help.\n      outline: 0\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"left\"`. */\n    paperAnchorLeft: {\n      left: 0,\n      right: 'auto'\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"right\"`. */\n    paperAnchorRight: {\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"top\"`. */\n    paperAnchorTop: {\n      top: 0,\n      left: 0,\n      bottom: 'auto',\n      right: 0,\n      height: 'auto',\n      maxHeight: '100%'\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"bottom\"`. */\n    paperAnchorBottom: {\n      top: 'auto',\n      left: 0,\n      bottom: 0,\n      right: 0,\n      height: 'auto',\n      maxHeight: '100%'\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"left\"` and `variant` is not \"temporary\". */\n    paperAnchorDockedLeft: {\n      borderRight: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"top\"` and `variant` is not \"temporary\". */\n    paperAnchorDockedTop: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"right\"` and `variant` is not \"temporary\". */\n    paperAnchorDockedRight: {\n      borderLeft: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"bottom\"` and `variant` is not \"temporary\". */\n    paperAnchorDockedBottom: {\n      borderTop: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Modal` component. */\n    modal: {}\n  };\n};\nvar oppositeDirection = {\n  left: 'right',\n  right: 'left',\n  top: 'down',\n  bottom: 'up'\n};\nexport function isHorizontal(anchor) {\n  return ['left', 'right'].indexOf(anchor) !== -1;\n}\nexport function getAnchor(theme, anchor) {\n  return theme.direction === 'rtl' && isHorizontal(anchor) ? oppositeDirection[anchor] : anchor;\n}\nvar defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The props of the [Modal](/api/modal/) component are available\n * when `variant=\"temporary\"` is set.\n */\n\nvar Drawer = /*#__PURE__*/React.forwardRef(function Drawer(props, ref) {\n  var _props$anchor = props.anchor,\n      anchorProp = _props$anchor === void 0 ? 'left' : _props$anchor,\n      BackdropProps = props.BackdropProps,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 16 : _props$elevation,\n      _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n\n  var BackdropPropsProp = _props$ModalProps.BackdropProps,\n      ModalProps = _objectWithoutProperties(_props$ModalProps, [\"BackdropProps\"]),\n      onClose = props.onClose,\n      _props$open = props.open,\n      open = _props$open === void 0 ? false : _props$open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      SlideProps = props.SlideProps,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Slide : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchor\", \"BackdropProps\", \"children\", \"classes\", \"className\", \"elevation\", \"ModalProps\", \"onClose\", \"open\", \"PaperProps\", \"SlideProps\", \"TransitionComponent\", \"transitionDuration\", \"variant\"]);\n\n  var theme = useTheme(); // Let's assume that the Drawer will always be rendered on user space.\n  // We use this state is order to skip the appear transition during the\n  // initial mount of the component.\n\n  var mounted = React.useRef(false);\n  React.useEffect(function () {\n    mounted.current = true;\n  }, []);\n  var anchor = getAnchor(theme, anchorProp);\n  var drawer = /*#__PURE__*/React.createElement(Paper, _extends({\n    elevation: variant === 'temporary' ? elevation : 0,\n    square: true\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[\"paperAnchor\".concat(capitalize(anchor))], PaperProps.className, variant !== 'temporary' && classes[\"paperAnchorDocked\".concat(capitalize(anchor))])\n  }), children);\n\n  if (variant === 'permanent') {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: clsx(classes.root, classes.docked, className),\n      ref: ref\n    }, other), drawer);\n  }\n\n  var slidingDrawer = /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: open,\n    direction: oppositeDirection[anchor],\n    timeout: transitionDuration,\n    appear: mounted.current\n  }, SlideProps), drawer);\n\n  if (variant === 'persistent') {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: clsx(classes.root, classes.docked, className),\n      ref: ref\n    }, other), slidingDrawer);\n  } // variant === temporary\n\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    BackdropProps: _extends({}, BackdropProps, BackdropPropsProp, {\n      transitionDuration: transitionDuration\n    }),\n    BackdropComponent: Backdrop,\n    className: clsx(classes.root, classes.modal, className),\n    open: open,\n    onClose: onClose,\n    ref: ref\n  }, other, ModalProps), slidingDrawer);\n});\nprocess.env.NODE_ENV !== \"production\" ? Drawer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Side from which the drawer will appear.\n   */\n  anchor: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * The contents of the drawer.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The elevation of the drawer.\n   */\n  elevation: PropTypes.number,\n\n  /**\n   * Props applied to the [`Modal`](/api/modal/) element.\n   */\n  ModalProps: PropTypes.object,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`Slide`](/api/slide/) element.\n   */\n  SlideProps: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDrawer',\n  flip: false\n})(Drawer);","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nvar useEnhancedEffect = typeof window !== 'undefined' && process.env.NODE_ENV !== 'test' ? React.useLayoutEffect : React.useEffect;\n/**\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\n *\n * This component can be useful in a variety of situations:\n * - Escape hatch for broken dependencies not supporting SSR.\n * - Improve the time-to-first paint on the client by only rendering above the fold.\n * - Reduce the rendering time on the server.\n * - Under too heavy server load, you can turn on service degradation.\n */\n\nfunction NoSsr(props) {\n  var children = props.children,\n      _props$defer = props.defer,\n      defer = _props$defer === void 0 ? false : _props$defer,\n      _props$fallback = props.fallback,\n      fallback = _props$fallback === void 0 ? null : _props$fallback;\n\n  var _React$useState = React.useState(false),\n      mountedState = _React$useState[0],\n      setMountedState = _React$useState[1];\n\n  useEnhancedEffect(function () {\n    if (!defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n  React.useEffect(function () {\n    if (defer) {\n      setMountedState(true);\n    }\n  }, [defer]); // We need the Fragment here to force react-docgen to recognise NoSsr as a component.\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, mountedState ? children : fallback);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * If `true`, the component will not only prevent server-side rendering.\n   * It will also defer the rendering of the children into a different screen frame.\n   */\n  defer: PropTypes.bool,\n\n  /**\n   * The fallback content to display.\n   */\n  fallback: PropTypes.node\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\n}\n\nexport default NoSsr;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { isHorizontal } from '../Drawer/Drawer';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      zIndex: theme.zIndex.drawer - 1\n    },\n    anchorLeft: {\n      right: 'auto'\n    },\n    anchorRight: {\n      left: 'auto',\n      right: 0\n    },\n    anchorTop: {\n      bottom: 'auto',\n      right: 0\n    },\n    anchorBottom: {\n      top: 'auto',\n      bottom: 0,\n      right: 0\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\n  var anchor = props.anchor,\n      classes = props.classes,\n      className = props.className,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"anchor\", \"classes\", \"className\", \"width\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchor\".concat(capitalize(anchor))], className),\n    ref: ref,\n    style: _defineProperty({}, isHorizontal(anchor) ? 'width' : 'height', width)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwipeArea'\n})(SwipeArea);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport { getThemeProps } from '@material-ui/styles';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport ownerDocument from '../utils/ownerDocument';\nimport useEventCallback from '../utils/useEventCallback';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport NoSsr from '../NoSsr';\nimport SwipeArea from './SwipeArea'; // This value is closed to what browsers are using internally to\n// trigger a native scroll.\n\nvar UNCERTAINTY_THRESHOLD = 3; // px\n// We can only have one node at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nvar nodeThatClaimedTheSwipe = null; // Exported for test purposes.\n\nexport function reset() {\n  nodeThatClaimedTheSwipe = null;\n}\n\nfunction calculateCurrentX(anchor, touches) {\n  return anchor === 'right' ? document.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches) {\n  return anchor === 'bottom' ? window.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  var domTreeShapes = [];\n\n  while (element && element !== rootNode) {\n    var style = window.getComputedStyle(element);\n\n    if ( // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' || // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      domTreeShapes = [];\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n\n    element = element.parentElement;\n  }\n\n  return domTreeShapes;\n}\n\nfunction findNativeHandler(_ref) {\n  var domTreeShapes = _ref.domTreeShapes,\n      start = _ref.start,\n      current = _ref.current,\n      anchor = _ref.anchor;\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  var axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(function (shape) {\n    // Determine if we are going backward or forward.\n    var goingForward = current >= start;\n\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n\n    var axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    var scrollPosition = shape[axisProperties.scrollPosition[axis]];\n    var areNotAtStart = scrollPosition > 0;\n    var areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return shape;\n    }\n\n    return null;\n  });\n}\n\nvar iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nvar transitionDurationDefault = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  var theme = useTheme();\n  var props = getThemeProps({\n    name: 'MuiSwipeableDrawer',\n    props: _extends({}, inProps),\n    theme: theme\n  });\n  var _props$anchor = props.anchor,\n      anchor = _props$anchor === void 0 ? 'left' : _props$anchor,\n      _props$disableBackdro = props.disableBackdropTransition,\n      disableBackdropTransition = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableDiscove = props.disableDiscovery,\n      disableDiscovery = _props$disableDiscove === void 0 ? false : _props$disableDiscove,\n      _props$disableSwipeTo = props.disableSwipeToOpen,\n      disableSwipeToOpen = _props$disableSwipeTo === void 0 ? iOS : _props$disableSwipeTo,\n      hideBackdrop = props.hideBackdrop,\n      _props$hysteresis = props.hysteresis,\n      hysteresis = _props$hysteresis === void 0 ? 0.52 : _props$hysteresis,\n      _props$minFlingVeloci = props.minFlingVelocity,\n      minFlingVelocity = _props$minFlingVeloci === void 0 ? 450 : _props$minFlingVeloci,\n      _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n\n  var BackdropProps = _props$ModalProps.BackdropProps,\n      ModalPropsProp = _objectWithoutProperties(_props$ModalProps, [\"BackdropProps\"]),\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      SwipeAreaProps = props.SwipeAreaProps,\n      _props$swipeAreaWidth = props.swipeAreaWidth,\n      swipeAreaWidth = _props$swipeAreaWidth === void 0 ? 20 : _props$swipeAreaWidth,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? transitionDurationDefault : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"]);\n\n  var _React$useState = React.useState(false),\n      maybeSwiping = _React$useState[0],\n      setMaybeSwiping = _React$useState[1];\n\n  var swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  var swipeAreaRef = React.useRef();\n  var backdropRef = React.useRef();\n  var paperRef = React.useRef();\n  var touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  var calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  useEnhancedEffect(function () {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  var setPosition = React.useCallback(function (translate) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$mode = options.mode,\n        mode = _options$mode === void 0 ? null : _options$mode,\n        _options$changeTransi = options.changeTransition,\n        changeTransition = _options$changeTransi === void 0 ? true : _options$changeTransi;\n    var anchorRtl = getAnchor(theme, anchor);\n    var rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    var horizontalSwipe = isHorizontal(anchor);\n    var transform = horizontalSwipe ? \"translate(\".concat(rtlTranslateMultiplier * translate, \"px, 0)\") : \"translate(0, \".concat(rtlTranslateMultiplier * translate, \"px)\");\n    var drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    var transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', getTransitionProps({\n        timeout: transitionDuration\n      }, {\n        mode: mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      var backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  var handleBodyTouchEnd = useEventCallback(function (event) {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    nodeThatClaimedTheSwipe = null;\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontal = isHorizontal(anchor);\n    var current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, event.changedTouches);\n    } else {\n      current = calculateCurrentY(anchorRtl, event.changedTouches);\n    }\n\n    var startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    var maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    var currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    var translateRatio = currentTranslate / maxTranslate;\n\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  var handleBodyTouchMove = useEventCallback(function (event) {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    } // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n\n\n    if (nodeThatClaimedTheSwipe != null && nodeThatClaimedTheSwipe !== swipeInstance.current) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (open && paperRef.current.contains(event.target) && nodeThatClaimedTheSwipe == null) {\n      var domTreeShapes = getDomTreeShapes(event.target, paperRef.current);\n      var nativeHandler = findNativeHandler({\n        domTreeShapes: domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor: anchor\n      });\n\n      if (nativeHandler) {\n        nodeThatClaimedTheSwipe = nativeHandler;\n        return;\n      }\n\n      nodeThatClaimedTheSwipe = swipeInstance.current;\n    } // We don't know yet.\n\n\n    if (swipeInstance.current.isSwiping == null) {\n      var dx = Math.abs(currentX - swipeInstance.current.startX);\n      var dy = Math.abs(currentY - swipeInstance.current.startY); // We are likely to be swiping, let's prevent the scroll event on iOS.\n\n      if (dx > dy) {\n        if (event.cancelable) {\n          event.preventDefault();\n        }\n      }\n\n      var definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(event);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= swipeAreaWidth;\n          } else {\n            swipeInstance.current.startY -= swipeAreaWidth;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    var maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    var startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n\n    var translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        var paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    var velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    setPosition(translate);\n  });\n  var handleBodyTouchStart = useEventCallback(function (event) {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (event.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n\n    if (event.muiHandled) {\n      return;\n    } // At least one element clogs the drawer interaction zone.\n\n\n    if (open && !backdropRef.current.contains(event.target) && !paperRef.current.contains(event.target)) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (!open) {\n      if (disableSwipeToOpen || event.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    event.muiHandled = true;\n    nodeThatClaimedTheSwipe = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 20 : -swipeAreaWidth), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(function () {\n    if (variant === 'temporary') {\n      var doc = ownerDocument(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart);\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: false\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return function () {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: false\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(function () {\n    return function () {\n      // We need to release the lock.\n      if (nodeThatClaimedTheSwipe === swipeInstance.current) {\n        nodeThatClaimedTheSwipe = null;\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  var handleBackdropRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    backdropRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Drawer, _extends({\n    open: variant === 'temporary' && maybeSwiping ? true : open,\n    variant: variant,\n    ModalProps: _extends({\n      BackdropProps: _extends({}, BackdropProps, {\n        ref: handleBackdropRef\n      })\n    }, ModalPropsProp),\n    PaperProps: _extends({}, PaperProps, {\n      style: _extends({\n        pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n      }, PaperProps.style),\n      ref: paperRef\n    }),\n    anchor: anchor,\n    transitionDuration: calculatedDurationRef.current || transitionDuration,\n    onClose: onClose,\n    ref: ref\n  }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/React.createElement(NoSsr, null, /*#__PURE__*/React.createElement(SwipeArea, _extends({\n    anchor: anchor,\n    ref: swipeAreaRef,\n    width: swipeAreaWidth\n  }, SwipeAreaProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes = {\n  /**\n   * @ignore\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   */\n  disableBackdropTransition: PropTypes.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   */\n  disableDiscovery: PropTypes.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   */\n  disableSwipeToOpen: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change his state.\n   * Specified as percent (0-1) of the width of the drawer\n   */\n  hysteresis: PropTypes.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   */\n  minFlingVelocity: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: PropTypes.shape({\n    BackdropProps: PropTypes.shape({\n      component: elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.shape({\n    component: elementTypeAcceptingRef,\n    style: PropTypes.object\n  }),\n\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  swipeAreaWidth: PropTypes.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default SwipeableDrawer;"],"names":["setTranslateValue","direction","node","transform","rect","getBoundingClientRect","fakeTransform","computedStyle","window","getComputedStyle","getPropertyValue","offsetX","offsetY","transformValues","split","parseInt","concat","innerWidth","left","width","innerHeight","top","height","getTranslateValue","style","webkitTransform","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Slide","props","ref","children","_props$direction","inProp","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","_props$timeout","timeout","_props$TransitionComp","TransitionComponent","Transition","other","theme","useTheme","childrenRef","handleOwnRef","instance","current","handleRefIntermediary","useForkRef","handleRef","normalizedTransitionCallback","callback","isAppearing","undefined","handleEnter","handleEntering","transitionProps","mode","webkitTransition","transitions","create","easing","easeOut","transition","handleEntered","handleExiting","handleExit","sharp","handleExited","updatePosition","handleResize","func","wait","arguments","length","debounced","_len","args","Array","_key","that","this","clearTimeout","setTimeout","apply","clear","debounce","addEventListener","removeEventListener","nodeRef","appear","state","childProps","visibility","oppositeDirection","right","bottom","isHorizontal","anchor","indexOf","getAnchor","defaultTransitionDuration","Drawer","_props$anchor","anchorProp","BackdropProps","classes","className","_props$elevation","elevation","_props$ModalProps","ModalProps","BackdropPropsProp","onClose","_props$open","open","_props$PaperProps","PaperProps","SlideProps","_props$transitionDura","transitionDuration","_props$variant","variant","mounted","drawer","Paper","square","paper","capitalize","root","docked","slidingDrawer","Modal","BackdropComponent","Backdrop","modal","withStyles","flex","overflowY","display","flexDirection","zIndex","WebkitOverflowScrolling","position","outline","paperAnchorLeft","paperAnchorRight","paperAnchorTop","maxHeight","paperAnchorBottom","paperAnchorDockedLeft","borderRight","palette","divider","paperAnchorDockedTop","borderBottom","paperAnchorDockedRight","borderLeft","paperAnchorDockedBottom","borderTop","name","flip","useEnhancedEffect","_props$defer","defer","_props$fallback","fallback","_React$useState","mountedState","setMountedState","SwipeArea","anchorLeft","anchorRight","anchorTop","anchorBottom","nodeThatClaimedTheSwipe","calculateCurrentX","touches","document","body","offsetWidth","pageX","calculateCurrentY","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","maxTranslate","Math","min","max","iOS","navigator","test","userAgent","transitionDurationDefault","SwipeableDrawer","inProps","getThemeProps","_props$disableBackdro","disableBackdropTransition","_props$disableDiscove","disableDiscovery","_props$disableSwipeTo","disableSwipeToOpen","hideBackdrop","_props$hysteresis","hysteresis","_props$minFlingVeloci","minFlingVelocity","ModalPropsProp","onOpen","SwipeAreaProps","_props$swipeAreaWidth","swipeAreaWidth","maybeSwiping","setMaybeSwiping","swipeInstance","isSwiping","swipeAreaRef","backdropRef","paperRef","touchDetected","calculatedDurationRef","setPosition","translate","options","_options$mode","_options$changeTransi","changeTransition","anchorRtl","rtlTranslateMultiplier","drawerStyle","backdropStyle","opacity","handleBodyTouchEnd","useEventCallback","event","horizontal","changedTouches","startX","startY","translateRatio","abs","velocity","handleBodyTouchMove","currentX","currentY","contains","target","nativeHandler","_ref","domTreeShapes","start","axisProperties","x","y","some","shape","goingForward","axis","scrollPosition","areNotAtStart","areNotAtEnd","findNativeHandler","element","rootNode","scrollWidth","scrollHeight","push","parentElement","getDomTreeShapes","dx","dy","cancelable","preventDefault","definitelySwiping","paperHit","lastTranslate","lastTime","performance","now","handleBodyTouchStart","defaultPrevented","muiHandled","doc","ownerDocument","passive","handleBackdropRef","pointerEvents"],"sourceRoot":""}